@page "/branchManagement-list"
@* <h3>BranchManagementList</h3> *@
@using SingSiamOffice.Models
<Navbar></Navbar>
<!-- Content Start -->
<div class="content">
    <Header />


    <div class="container-fluid mt-4 mb-4">

        <div class="row">
            <div class="col-12 mt-4 mb-4">
                <MudStack Row="true">
                    <MudText Typo="Typo.h5" Style="@headertext"><img class="rounded-circle" src="img/icons/branches.svg" alt="" style="width:3rem;"> จัดการสาขา</MudText>

                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" Style="@buttoncolor1" @onclick="()=>AddBranch()">เพิ่มสาขาใหม่</MudButton>
                </MudStack>

            </div>

        </div>

    </div>
    <div class="container-fluid mt-4 mb-4">
        <div class="card" style="@cardcss">
            <div class="card-body">
                <div class="row">
                 
                    <div class="col-3">
                        <MudText Typo="Typo.body1">พิมพ์เพือค้นหาจากชื่อหรือรหัสสาขา <span style="color:red;">*</span></MudText>
                        <MudAutocomplete T="Branch" @bind-Value="selectBranch" SearchFunc="@SearchBranch" ToStringFunc="@(e=> e==null?null : $"{e.BranchName} | {e.BranchCode}")" Margin="Margin.Dense" Variant="Variant.Outlined" Style="background-color:#fff;" />
                    </div>
                   
                    <div class="col-6 mt-5">
                        <MudStack Row="true" Spacing="1">
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" Color="Color.Info" @onclick="()=>SearchData()">ค้นหา</MudButton>
                            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" Color="Color.Error" @onclick="()=>Clear()">ล้างข้อมูล</MudButton>
                        </MudStack>

                    </div>
                </div>
            </div>
        </div>

    </div>


    <div class="container-fluid mt-4 mb-4">
        <div class="row">
            @foreach (var item in list_b)
            {
            <div class="col-md-4 pb-3">
                
                    <div class="card buiding-card p-3 mb-2" style="@cardcss">
                        <div class="d-flex justify-content-between">
                            <div class="d-flex flex-row align-items-center">
                                <div class="icon"> <img class="rounded-circle" src="img/branch/building.png"> </div>
                                <div class="ms-2 c-details">
                                    <h5 class="mb-0">ชื่อสาขา: <span>@item.BranchName</span></h5>
                                </div>
                            </div>
                            <div class="badge">
                                @if (item.IsActive)
                                {
                                    <MudChip Variant="Variant.Outlined" Color="Color.Success">เปิดใช้งาน</MudChip>
                                }
                                else{

                                    <MudChip Variant="Variant.Outlined" Color="Color.Error">ปิดใช้งาน</MudChip>
                                    }
                            </div>
                        </div>
                        <div class="mt-5">
                            <MudStack>
                             
                                <MudText Typo="Typo.body1">รหัสสาขา : <span style="@detailtext">@item.BranchCode</span></MudText>
                                <MudText Typo="Typo.body1">รหัสบัญชีสาขา : <span style="@detailtext">@item.NoBlank</span></MudText>
                                <MudText Typo="Typo.body1">เบอร์โทรติดต่อ : <span style="@detailtext">@item.Phone</span></MudText>
                                <MudText Typo="Typo.body1">ที่อยู่สาขา : <span style="@detailtext">@item.Address</span></MudText>
                            </MudStack>
                            <div class="mt-5">

                                <div class="mt-3 text-end">
                                    <MudMenu FullWidth="true" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopLeft">
                                        <ActivatorContent>
                                            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Settings" Style="@buttoncolor1">การจัดการ</MudButton>
                                        </ActivatorContent>
                                        <ChildContent>
                                            <MudMenuItem @onclick="()=>viewBranchInfo(item.Id)"><MudIcon Icon="@Icons.Material.Filled.RemoveRedEye" Title="Add" Color="Color.Info" /> ดูข้อมูล</MudMenuItem>
                                            <MudMenuItem @onclick="()=>EditBranch(item.Id)"><MudIcon Icon="@Icons.Material.Filled.Edit" Title="Add" Color="Color.Warning" /> แก้ไข</MudMenuItem>
                                            <MudMenuItem @onclick="()=>delete(item.Id)"><MudIcon Icon="@Icons.Material.Filled.Cancel" Title="Add" Color="Color.Error" /> ลบ</MudMenuItem>

                                        </ChildContent>
                                    </MudMenu>
                                </div>
                            </div>
                        </div>
                    </div>
                

             
            </div>
        }
        </div>
    </div>


</div>


@code {
    string tableheader = "background-color:#840012; color:#ffff;";
    string headertext = "color:#840012; font-weight:600;";
    string buttoncolor1 = "background-color:#840012; color:#FFF; font-weight:600;";
    string settingbutton = "background-color:#840012; color:#FFF; font-weight:600; ";
    string buttoncollape = "background-color:#fc928c; color:#840012; font-weight:600;";
    string imporText = "color:#840012; font-weight:600;";
    string detailtext = "color:#1C2833 ; font-weight:600; font-style: italic;";
    string cardcss = "box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);transition: 0.3s;";

    List<Branch> list_b = new List<Branch>();
    List<Branch> list_Branch = new List<Branch>();

    SingSiamOffice.Models.SingsiamdbContext db = new SingSiamOffice.Models.SingsiamdbContext();
    protected override async Task OnInitializedAsync()
    {
        list_b =  db.Branches.ToList();
        list_Branch = list_b;
    }
    private async Task<IEnumerable<Branch>> SearchBranch(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return list_Branch;
        return list_Branch.Where(x => x.BranchName.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    Models.Branch selectBranch = null;
    Models.Branch _selectBranch
    {
        get { return _selectBranch; }
        set
        {
            if (value != null)
            {

                _selectBranch = value;

            }
            else
            {

            }
        }
    }
    private async void SearchData()
    {
        list_b = list_Branch.Where(s => s.Id == selectBranch.Id).ToList();
        StateHasChanged();

    }
    private async void Clear()
    {
        list_b = db.Branches.ToList();
        selectBranch = null;
        StateHasChanged();

    }
}
